nlf.exception=nlf exception
nlf.exception.dao=nlf dao exception
nlf.exception.dao.setting.not_found=db setting not found:{0}
nlf.exception.dao.setting.default_not_found=default db setting not found
nlf.exception.dao.setting.format=db setting file format:{0}
nlf.exception.dao.driver.not_found=db driver not found:{0}
nlf.exception.dao.connection.provider.not_found=db connection provider not found to support:{0}
nlf.exception.dao.not_found=dao not found:{0}
nlf.exception.dao.executer.not_found=executer not found:dbType={0},executer={1}
nlf.exception.dao.select.one.not_found=record not found
nlf.exception.dao.operation_not_support=operation not support
nlf.exception.dao.batch_not_support=batch not support:{0}
nlf.exception.dao.batch_not_start=need start batch
nlf.exception.dao.batch_sql_not_match=batch sql not match

nlf.dao.setting.provider.found=found db setting file:{1},supported by setting provider:{0}
nlf.dao.setting.provider.not_found=found db setting file:{0},but no supported setting provider:{1}
nlf.dao.setting.found=found {0} supported db setting:{1}
nlf.dao.driver.registed=driver registed:{0}
nlf.dao.executer.sql.statement=SQL = {0}
nlf.dao.executer.sql.parameter=\r\nparam[{0}] = {1}

nlf.serialize.parser.not_found=parser not found:{0}
nlf.serialize.wrapper.not_found=wrapper not found:{0}
nlf.serialize.json.format=json format:{0}
nlf.serialize.xml.format=xml format:{0}
nlf.serialize.format=wrong format:{0}
